# Reference: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md

openapi: 3.0.2

# This is your document metadata
info:
  version: 2.0.0
  title: XJTUANA
  description: 西安交通大学网络管理协会官方OpenAPI文档
  #termsOfService: https://ana.xjtu.edu.cn/developer/terms/
  contact:
    name: 研发部
    #url: https://ana.xjtu.edu.cn/developer/
    email: xjtuana@mail.xjtu.edu.cn
  license:
    name: Copyright (C) 2020 XJTUANA. All rights reserved.
    #url: /
#externalDocs:
  #description: 外部文档
  #url: https://ana.xjtu.edu.cn/developer/external-docs
servers:
- url: http://ana2020.nic3.ana/api/{majorVersion}
  description: 测试环境
  variables:
    majorVersion:
      default: v2
      enum:
        - 'v2'
      description: 主版本号
- url: https://ana.xjtu.edu.cn/api/{majorVersion}
  description: 生产环境
  variables:
    majorVersion:
      default: v2
      enum:
        - 'v2'
      description: 主版本号
tags:
- name: campuses
  description: 校区相关
- name: club
  description: 社团相关
- name: order
  description: 报修单相关
- name: faq
  description: 常见问题相关
- name: user
  description: 用户相关
# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /user:
    get:
      tags:
      - user
      summary: 获取登录用户信息
      operationId: ''
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/userReturn'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        member:
                          allOf:
                          - $ref: '#/components/schemas/member'
                          - type: object
                            properties:
                              buildings:
                                description: 负责宿舍楼
                                type: array
                                items:
                                  $ref: '#/components/schemas/building'
                              points:
                                description: 积分数量
                                type: integer
                                example: 15
  
  /user/profile:
    put:
      tags:
      - user
      summary: 修改用户信息
      operationId: ''
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userprofileupdatereturn'
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userprofileupdate'
    patch:
      tags:
      - user
      summary: 修改用户信息
      operationId: ''
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userprofileupdatereturn'
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userprofileupdate'
  /member:
    get:
      tags:
      - club
      summary: 查询社员信息
      operationId: ''
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/memberquery'
      parameters:
      - name: name
        in: query
        description: 社员姓名
        required: false
        schema:
          $ref: "#/components/schemas/name"
      - name: netid
        in: query
        description: 社员NetID
        required: false
        schema:
          $ref: "#/components/schemas/netid"
      - name: group_id
        in: query
        description: 部门编号
        required: false
        schema:
          $ref: "#/components/schemas/department_id"
      - name: position_id
        in: query
        description: 职位编号
        required: false
        schema:
          $ref: "#/components/schemas/designation_id"
      - name: member_quited
        in: query
        description: 是否包含已退社人员
        required: false
        schema:
          type: integer
          enum:
          - 0
          - 1
          default: 0
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    post:
      tags:
      - club
      summary: 添加社员
      operationId: ''
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storeMemberResponse'
      requestBody:
        description: 新增社员的信息
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addMemberRequest'
  /member/{id}:
    get:
      tags:
      - club
      summary: 查询社员详细信息
      description: 通过id查询社员的详细信息
      operationId: ''
      parameters:
      - name: id
        in: path
        description: 社员编号
        required: true
        schema:
          $ref: "#/components/schemas/member_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/member_all'
        404:
          description: 没有符合条件的数据
    delete:
      tags:
      - club
      summary: 社员退社
      description: 通过id删除社员
      operationId: ""
      parameters:
      - name: id
        in: path
        description: 社员编号
        required: true
        schema:
          $ref: "#/components/schemas/member_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/destoryMemberResponse"
    
    put:
      tags:
      - user
      summary: 修改社员信息
      description: 通过id修改社员信息
      operationId: ''
      parameters:
      - name: id
        in: path
        description: 社员编号
        required: true
        schema:
          $ref: "#/components/schemas/member_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateMemberResponse'
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateMemberRequest'
    patch:
      tags:
      - user
      summary: 修改社员信息
      description: 通过id修改社员信息
      operationId: ''
      parameters:
      - name: id
        in: path
        description: 社员编号
        required: true
        schema:
          $ref: "#/components/schemas/member_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateMemberResponse'
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateMemberRequest'
  /member/{id}/restore:
    post:
      tags:
      - club
      summary: 重新入社
      description: 通过id恢复删除的社员
      operationId: ""
      parameters: 
      - name: id
        in: path
        description: 恢复社员的编号
        required: true
        schema:
          $ref: "#/components/schemas/member_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/restoreMemberResponse'
  /member/{id}/force:
    delete:
      tags:
      - club
      summary: 永久删除
      description: 通过id永久删除社员
      operationId: ""
      parameters:
      - name: id
        in: path
        description: 要永久删除社员的变换
        required: true
        schema:
          $ref: "#/components/schemas/member_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forceDeleteMemberResponse'
  /member/export/excel:
    get:
      tags:
      - club
      summary: 导出社员列表
      description: 导出社员列表为excel
      operationId: ""
      responses:
        200:
          description: 返回的excel表单
          content:
            application/octet-stream:
              example: ""
  /member/{id}/netid:
    put:
      tags:
      - club
      summary: 修改netid
      description: 通过id修改netid
      operationId: ""
      parameters:
      - name: id
        in: path
        description: 社员编号
        required: true
        schema:
          $ref: "#/components/schemas/member_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateNetidResponse'
    patch:
      tags:
      - club
      summary: 修改netid
      description: 通过id修改netid
      operationId: ""
      parameters:
      - name: id
        in: path
        description: 社员编号
        required: true
        schema:
          $ref: "#/components/schemas/member_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateNetidResponse'
  /user/task:
    get:
      tags:
      - club
      summary: 返回所有未完成报修单
      operationId: ''
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userTask'
  /user/order:
    get:
      tags:
      - club
      summary: 返回所有的报修单
      operationId: ''
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userTaskOrder'
  /user/order/Statistic:
    get:
      tags:
      - club
      summary: 返回报修单数量
      operationId: ''
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taskNum'
  
components:
  schemas:
    message:
      description: 响应消息
      type: string
      example: "OK"
    status:
      description: 状态码
      type: integer
      example: 0
    netid:
      description: CAS统一身份认证系统的登录名
      type: string
      example: business
    campus_id:
      description: 校区编号
      type: integer
      example: 1
    campus:
      description: 校区
      type: object
      properties:
        id:
          $ref: "#/components/schemas/campus_id"
        name:
          description: 校区名称
          type: string
          example: 兴庆校区东
    building_id:
      description: 楼宇编号
      type: integer
      example: 1
    building:
      description: 楼宇
      type: object
      properties:
        id:
          $ref: "#/components/schemas/building_id"
        name:
          description: 楼宇名称
          type: string
          example: 东1
        campus:
          "$ref": "#/components/schemas/campus"
        department:
          "$ref": "#/components/schemas/department"
        supervisor:
          description: 负责社员
          type: object
          properties:
            id:
              $ref: "#/components/schemas/member_id"
            name:
              description: 负责社员姓名
              type: string
              example: 熊帆
            mobile:
              "$ref": "#/components/schemas/mobile"
    designation_id:
      description: 职务编号
      type: integer
      example: 2
    designation:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/designation_id"
        name:
          description: 职务名称
          type: string
          example: 运维一部部长
    department_id:
      description: 部门编号
      type: integer
      example: 2
    department:
      description: 部门
      type: object
      properties:
        id:
          $ref: "#/components/schemas/department_id"
        name:
          description: 部门名称
          type: string
          example: 运维一部
        name_en:
          description: 英文部门名称（未使用）
          type: string
          example: null
    user_id:
      description: 用户编号
      type: integer
      example: 3007
    name:
      description: 姓名
      type: string
      example: 熊帆
    gender:
      description: 性别
      type: string
      enum:
      - 未知
      - 男
      - 女
    userno:
      description: 学工号
      type: string
      pattern: ^\d{10}$
      example: 2160502001
    mobile:
      description: 手机号码
      type: string
      pattern: ^(13[0-9]|14[5-9]|15[0-3,5-9]|16[2,5,6,7]|17[0-8]|18[0-9]|19[0-3,5-9])\d{8}$
      example: 13973986117
    qq:
      description: QQ号
      type: string
      pattern: ^[1-9][0-9]{4,10}$
    wechat:
      description: 微信号
      type: string
      pattern: ^[a-zA-Z]{1}[-_a-zA-Z0-9]{5,19}$
    wechat_openid:
      description: 微信OpenID
      type: string
      example: wxid_abcdef123456
    alipay:
      description: 支付宝账号
      type: string
    email:
      description: 电子邮箱
      type: string
    college:
      description: 所在学院
      type: string
      example: 电子与信息工程学院
    class:
      description: 班级
      type: string
      example: 计算机71
    create_at:
      description: 创建时间
      type: integer
      example: 15777777777
    room_name:
      description: 宿舍房间名
      type: string
      example: 709
    member_id:
      description: 社员编号
      type: integer
      example: 2016001
    dorm_building:
      description: 宿舍楼名称
      type: string
      example: 西21舍
    profile:
      description: 用户资料
      type: object
      properties:
        id:
          $ref: '#/components/schemas/user_id'
        name:
          $ref: '#/components/schemas/name'
        gender:
          $ref: '#/components/schemas/gender'
        stuid:
          $ref: '#/components/schemas/userno'
        college:
          $ref: '#/components/schemas/college'
        class:
          $ref: '#/components/schemas/class'
        dorm_building:
          $ref: '#/components/schemas/dorm_building'
        dorm_room:
          $ref: '#/components/schemas/room_name'
        mobile:
          $ref: '#/components/schemas/mobile'
        qq:
          $ref: "#/components/schemas/qq"
        wechat:
          $ref: "#/components/schemas/wechat"
        alipay:
          $ref: "#/components/schemas/alipay"
        email:
          $ref: "#/components/schemas/email"
        hometown:
          description: 生源地
          type: string
          example: 陕西
        birthday:
          description: 生日
          type: string
          example: "2004-02-29"
        desc:
          description: 自我介绍
          type: string
          example: 单身可撩
    taskNum:
      description: 报修单数量
      type: integer
      example: 1
    member:
      description: 社员资料
      type: object
      properties:
        id:
          $ref: '#/components/schemas/member_id'
        department_id:
          $ref: '#/components/schemas/department_id'
        designation_id: 
          $ref: '#/components/schemas/designation_id'
        created_at:
          description: 创建时间
          type: string
          example: '2020-10-29 11:14:02'
        deleted_at:
          description: 退出时间
          type: string
          example: null
        department:
          $ref: '#/components/schemas/department'
        designation:
          $ref: '#/components/schemas/designation'
    member_all:
      description: 完整的社员信息
      allOf:
      - $ref: "#/components/schemas/member"
      - type: object
        properties:
          wechat_openid:
            $ref: "#/components/schemas/wechat_openid"
          gender:
            $ref: "#/components/schemas/gender"
          college:
            $ref: "#/components/schemas/college"
          class:
            $ref: "#/components/schemas/class"
          dorm_building_id:
            $ref: "#/components/schemas/building_id"
          dorm_room_name:
            $ref: "#/components/schemas/room_name"
          mobile:
            $ref: "#/components/schemas/mobile"
          qq:
            $ref: "#/components/schemas/qq"
          wechat:
            $ref: "#/components/schemas/wechat"
          alipay:
            $ref: "#/components/schemas/alipay"
          email:
            $ref: "#/components/schemas/email"
          hometown:
            description: 生源地
            type: string
          birthday:
            description: 生日
            type: string
          created_at:
            description: 入社时间
            type: integer
          updated_at:
            description: 信息更新时间
            type: integer
          deleted_at:
            description: 退社时间
            type: integer
    userReturn:
      description: 用户信息
      type: object
      properties:
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
        data:
          $ref: '#/components/schemas/user'
    user:
      description: 消息主体
      type: object
      properties:
        netid:
          $ref: '#/components/schemas/netid'
        logged_in_at:
          description: 最后登陆时间
          type: string
          example: "2020-10-30 12:41:20"
        profile:
          allOf:
            - $ref: '#/components/schemas/profile'
            - type: object
              properties:
                building:
                  #description: 负责宿舍楼
                  $ref: '#/components/schemas/dorm_building'
    userprofileupdatereturn:
      description: 个人信息修改返回值
      type: object
      properties:
        message:
          description: 提示信息
          type: string
          enum:
          - 个人资料修改成功!
          - 个人资料修改失败!
        status:
          description: 消息码
          type: integer
          enum:
          - 0
          - -1
        data:
          description: 空数组
          type: array
          items: {}
    userprofileupdate:
      description: 新个人资料
      type: object
      properties:
        mobile:
          $ref: '#/components/schemas/mobile'
        qq:
          $ref: "#/components/schemas/qq"
        wechat:
          $ref: "#/components/schemas/wechat"
        email:
          $ref: "#/components/schemas/email"
        birthday:
          description: 生日
          type: string
          example: "2004-02-29"
        hometown:
          description: 生源地
          type: string
          example: 陕西
        desc:
          description: 自我介绍
          type: string
          example: 单身可撩
    order_id:
      description: 报修单ID
      type: integer
      example: 3
    memberquery:
      description: 社员查询接口返回值
      type: object
      properties:
        message:
          $ref: "#/components/schemas/message"
        status:
          $ref: "#/components/schemas/status"
        data:
          description: 响应体
          type: object
          properties:
            current_page:
              description: 当前页码
              type: integer
              example: 1
            data:
              description: 查询结果列表
              type: array
              items:
                allOf:
                - $ref: "#/components/schemas/member"
                - type: object
                  properties:
                      user:
                        $ref: "#/components/schemas/user"
    storeMemberResponse:
      description: 创建社员回复
      type: object
      properties:
        message:
          description: 消息
          example: 社员添加成功！
        status:
          $ref: "#/components/schemas/status"
        data:
          description: 空字段
          type: array
          items: {}
    restoreMemberResponse:
      description: 恢复社员回复
      type: object
      properties:
        message:
          description: 消息
          example: 社员回社成功！
        status:
          $ref: "#/components/schemas/status"
        data:
          description: 空字段
          type: array
          items: {}
    destoryMemberResponse:
      description: 删除社员回复
      type: object
      properties:
        message:
          description: 消息
          example: 社员退社成功！
        status:
          $ref: "#/components/schemas/status"
        data:
          description: 空字段
          type: array
          items: {}
    forceDeleteMemberResponse:
      description: 永久删除社员回复
      type: object
      properties:
        message:
          description: 消息
          example: 社员永久删除成功！
        status:
          $ref: "#/components/schemas/status"
        data:
          description: 空字段
          type: array
          items: {}
    updateMemberResponse:
      description: 编辑社员回复
      type: object
      properties:
        message:
          description: 消息
          example: 社员编辑成功！
        status:
          $ref: "#/components/schemas/status"
        data:
          description: 空字段
          type: array
          items: {}
    updateNetidResponse:
      description: 修改netid回复
      type: object
      properties:
        message:
          description: 消息
          example: 社员NETID更新成功！
        status:
          $ref: "#/components/schemas/status"
        data:
          description: 空字段
          type: array
          items: {}
    updateMemberRequest:
      description: 编辑社员的消息
      type: object
      properties:
        department_id:
          $ref: "#/components/schemas/department_id"
        designation_id:
          $ref: '#/components/schemas/designation_id'
    addMemberRequest:
      description: 新增社员的消息
      type: object
      properties:
        department_id:
          $ref: "#/components/schemas/department_id"
        designation_id:
          $ref: '#/components/schemas/designation_id'
        netid:
          $ref: "#/components/schemas/netid"
    service_id:
      description: 服务方式编号
      type: integer
      example: 2          
    order_state:
      description: 报修单状态
      type: "string"
      enum:
      - "all"
      - "created"
      - "processing"
      - "finished"
      example: "created"
    userTask:
      description: 未完成报修单查询返回值
      type: object
      properties:
        message:
          description: 空
          example: ""
        status:
          $ref: "#/components/schemas/status"
        data:
          description: 响应体
          type: object
          properties:
            current_page:
              description: 当前页码
              type: integer
              example: 1
            data:
              description: 查询结果列表
              type: array
              items:
                $ref: "#/components/schemas/order"
    userTaskOrder:
      description: 全部报修单查询返回值
      type: object
      properties:
        message:
          description: 空
          example: ""
        status:
          $ref: "#/components/schemas/status"
        data:
          description: 响应体
          type: object
          properties:
            current_page:
              description: 当前页码
              type: integer
              example: 1
            data:
              description: 查询结果列表
              type: array
              items:
                $ref: "#/components/schemas/order"
                  
    order:
      description: 报修单
      type: object
      properties:
        id:
          $ref: "#/components/schemas/order_id"
        user_id:
          $ref: "#/components/schemas/user_id"
        building_id:
          $ref: "#/components/schemas/building_id"
        room_name:
          $ref: "#/components/schemas/room_name"
        mobile:
          $ref: "#/components/schemas/mobile"
        service_id:
          $ref: "#/components/schemas/service_id"
        member_id:
          $ref: "#/components/schemas/member_id"
        created_at:
          description: 订单创建时间
          type: integer
          minimum: 0
          example: 1579793174
        order_state:
          $ref: "#/components/schemas/order_state"
    order_all:
      description: 完整订单信息
      allOf:
      - $ref: "#/components/schemas/order"
      - type: object
        properties:
          qq:
            $ref: "#/components/schemas/qq"
          wechat:
            $ref: "#/components/schemas/wechat"
          user_remark:
            description: 用户备注
            type: string
            maxLength: 10000
            example: "网坏了，拨号拨不上"
          member_remark:
            description: 社员备注
            type: string
            maxLength: 10000
            example: "转给lvcs办理。这人只有晚上有空，上门带测线仪"
          user_evaluate_msg:
            description: 用户评价
            type: string
            maxLength: 1000
            example: "很满意，小哥哥很帅啊，技术又好态度也好~"
          user_evaluate_score:
            description: 用户评分
            type: integer
            minimum: 1
            maximum: 5
            example: 5
          member_evaluate_msg:
            description: 社员评价
            type: string
            maxLength: 1000
            example: "感谢你的肯定，你的满意是我们的心愿"
          member_evaluate_score:
            description: 社员评分
            type: integer
            minimum: 1
            maximum: 5
            example: 5
          manager_evaluate_msg:
            description: 主管附加评价
            type: string
            maxLength: 1000
            example: "跑了很多趟，辛苦了"
          manager_evaluate_score:
            description: 主管附加评分
            type: integer
            minimum: -2
            maximum: 2
            example: 2
          received_at:
            description: 接单时间
            type: integer
            minimum: 0
            example: 1579794407
          user_urged_at:
            description: 用户催单时间
            type: integer
            minimum: 0
            example: 0
          member_urged_at:
            description: 社员催单时间
            type: integer
            minimum: 0
            example: 0
          manager_urged_at:
            description: 主管催单时间
            type: integer
            minimum: 0
            example: 0
          completed_at:
            description: 结单时间
            type: integer
            minimum: 0
            example: 1579796455
            
  parameters:
    page:
      name: page
      in: query
      description: 分页参数，指定获取第几页，默认1
      required: false
      schema:
        type: integer
        default: 1
        minimum: 1
      example: 1
    per_page:
      name: per_page
      in: query
      description: 分页参数，指定每页数据量，可选10-100，默认30
      required: false
      schema:
        type: integer
        default: 30
        minimum: 10
        maximum: 100
      example: 30
    since:
      name: since
      in: query
      description: 时间戳，获取在此时刻之后的数据
      required: false
      schema:
        type: integer
      example: 0
    before:
      name: before
      in: query
      description: 时间戳，获取在此时刻之前的数据
      required: false
      schema:
        type: integer
      example: 0
    direction:
      name: direction
      in: query
      description: 按照时间戳排序后返回数据
      required: false
      schema:
        type: string
        enum:
          - desc
          - asc
      example: desc
    Accept-Language:
      name: Accept-Language
      in: header
      description: 使用语言
      required: false
      schema:
        type: string
        default: zh
        enum:
          - zh
          - en